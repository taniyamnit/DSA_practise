class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def add(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
        else:
            current = self.head
            while current.next:
                current = current.next
            current.next = new_node

    def add_first(self, data):
        new_node = Node(data)
        new_node.next = self.head
        self.head = new_node

    def add_last(self, data):
        self.add(data)  # You can use the 'add' method to add to the last as well

    def delete(self, data):
        if not self.head:
            return

        if self.head.data == data:
            self.head = self.head.next
            return

        current = self.head
        while current.next:
            if current.next.data == data:
                current.next = current.next.next
                return
            current = current.next

    def count_nodes(self):
        count = 0
        current = self.head
        while current:
            count += 1
            current = current.next
        return count

    def display(self):
        current = self.head
        while current:
            print(current.data, end=" -> ")
            current = current.next
        print("None")

# Example usage:
if __name__ == "__main__":
    linked_list = LinkedList()
    
    linked_list.add(1)
    linked_list.add(2)
    linked_list.add(3)
    linked_list.add_first(0)
    linked_list.add_last(4)
    
    linked_list.display()  # Output: 0 -> 1 -> 2 -> 3 -> 4 -> None
    
    linked_list.delete(2)
    
    linked_list.display()  # Output: 0 -> 1 -> 3 -> 4 -> None
    
    node_count = linked_list.count_nodes()
    print(f"Number of nodes: {node_count}")  # Output: Number of nodes: 4
